stages:
  - test
  - version
  - package
  - deploy


# look if on release branch. Then calculate version based on tag and 
create-version:
  stage: version
  image: registry.git.unyt.org/unyt/sdk/semver-tool
  artifacts:
    reports:
       dotenv: version.env
    paths:
      - version
  variables:
    GITLAB_HOST: "https://git.unyt.org"
    GITLAB_API_TOKEN: ${API_TOKEN}
  script:
    - semver
    - export VERSION=$(cat version) 
    - echo "CREATE_VERSION=true" >> version.env
    - echo $VERSION
  only:
    - /^feature.*$/
    - /^release.*$/


.test:
  stage: test
  image: denoland/deno
  allow_failure: true
  timeout: 10m
  script:
    - deno run --allow-all --importmap importmap.json https://cdn.unyt.org/unyt_tests/run.ts --color=simple --reportfile=junit.xml ./test/
  artifacts:
    when: always
    paths:
      - junit.xml
    reports:
      junit:
        - junit.xml

package:
  stage: package
  image: registry.git.unyt.org/unyt/sdk/utilities
  needs: 
    - create-version
  dependencies:
    - create-version
  before_script:
    - '[ -f ./version ] && export VERSION=$(cat ./version)'
  script:
    - tar -czf package.tar.gz *.ts assets/ compiler/ dx_data/ js_adapter/ lib/ network/ readme/ runtime/ types/ utils/ wasm/
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file package.tar.gz "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/unyt_core/${VERSION}/package.tar.gz"'
  only:
    - /^release.*$/

trigger:
  stage: deploy
  image: registry.git.unyt.org/unyt/sdk/utilities
  dependencies:
    - create-version
  only:
    - /^release.*$/
  script:
    - if [ "$CREATE_VERSION" != "true" ]; then return 1; fi
    - "curl --request POST --form token=${TRIGGER_CDN} --form ref=main https://git.unyt.org/api/v4/projects/61/trigger/pipeline"
